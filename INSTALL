= Regular Install = 
1. Run "build toolchain"  from the compile folder. The files generated are
placed in "built" in the main folder. 
2. Copy the files inside "built" in  "doc/toolchain"  in the project   



= New Documentation install
1. See above
2. See above

3. Define the documentation title, source folder and other ant properties
   in manual.xml. To create manual.xml modify doc.xml in the toolchain folder.
   doc.xml defines a set of ant targets that can be used (manualHtml, manualSingleHtml,
   manualPdf,etc). doc.xml does not define the basic javadoc targets. If there are no
   javadoc targets in the documentation simple remove the relevant dependent targets 
   in manual.xml.  The minimal properties that need to be defined are the folder for
   the xml files, then name of the manual, and the name of the manual in the final files.
   
   The import sequence is the following:
    -> means ant import
  
   compile/build.xml -> doc/manual.xml  -> doc/toolchain/doc_macros.xml -> doc/toolchain/doc_paths.xml

   Bellow is a minimal manual.xml file for the documentation.
                                    

Example: 

<?xml version="1.0" encoding="UTF-8"?>
<project name="doc.IC2D">   <!-- name of the manual -->
    <property name="doc.name"               value="IC2D" /> <!-- name of the manual in the final targets -->
    <property name="docs.src.dir"           value="../doc/src_ic2d" />  <!-- folder containing the xml files -->

     <!-- ##used for DocBookize## -->
    <!-- the path for java file inclusion -->
    <property name="java.inclusion" value="${src.proactive.dir}/${proactive.path}" />

    <property name="xml.inclusion" value="${descriptors.dir}/" />

    <!-- The path to find java files in html -->
    <property name="otherpath1.inclusion" value="ProActive_src_html/${proactive.path}/" /> <!-- broken -->

    <property name="otherpath2.inclusion" value="${src.examples.dir}/${proactive.path}/" />
    <property name="otherpath3.inclusion" value="./"/>
    <property name="otherpath4.inclusion" value="./"/>
    <property name="otherpath5.inclusion" value="./"/>

	<import file="toolchain/doc_macros.xml" />	
	<!-- ================================================================ -->
	<!--            Create docs, which is the javadoc + manual            -->
	<!--  =============================================================== -->
	<target name="docs" depends="javadoc.all, manual, doc.zips" description="Construct the javadoc, the manual, and the zip archives" />
	
	<!-- ================================================================ -->
	<!--            Create docs, which is the javadoc + manual            -->
	<!--  =============================================================== -->
	<target name="doc.zips" depends="manualSingleHtmlZip, manualHtmlZip, javadoc.completeZip" description="Construct the javadoc and manual zip archives" />
          
         ........................
         ........................	

    
Several documentation projects can coexist at the same time in the same project by importing
more than one target definition file (manual.xml) in build.xml. The files need to define different
manual names (the name property of the project tag), different xml folders, and different  manual file names. 
